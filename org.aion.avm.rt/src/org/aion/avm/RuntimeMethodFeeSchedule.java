package org.aion.avm;

public class RuntimeMethodFeeSchedule {
    public static final long BigInteger_avm_constructor = 607; // byte code cost - 459; invoked methods cost - 148;
    public static final long BigInteger_avm_constructor_2 = 613; // byte code cost - 465; invoked methods cost - 148;
    public static final long BigInteger_avm_constructor_4 = 601; // byte code cost - 453; invoked methods cost - 148;
    public static final long BigInteger_avm_nextProbablePrime = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigInteger_avm_valueOf = 392; // byte code cost - 372; invoked methods cost - 20;
    public static final long BigInteger_avm_add = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_subtract = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_multiply = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_divide = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_remainder = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_pow = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_sqrt = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigInteger_avm_gcd = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_abs = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigInteger_avm_negate = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigInteger_avm_signum = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_mod = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_modPow = 422; // byte code cost - 402; invoked methods cost - 20;
    public static final long BigInteger_avm_modInverse = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_shiftLeft = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_shiftRight = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_and = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_or = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_xor = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_not = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigInteger_avm_andNot = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_testBit = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long BigInteger_avm_setBit = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_clearBit = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_flipBit = 404; // byte code cost - 384; invoked methods cost - 20;
    public static final long BigInteger_avm_getLowestSetBit = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_bitLength = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_bitCount = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_compareTo = 154; // byte code cost - 134; invoked methods cost - 20;
    public static final long BigInteger_avm_equals = 382; //maximum cost of multiple blocks; // byte code cost - 362; invoked methods cost - 20;
    public static final long BigInteger_avm_min = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_max = 410; // byte code cost - 390; invoked methods cost - 20;
    public static final long BigInteger_avm_hashCode = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_toString = 308; // byte code cost - 288; invoked methods cost - 20;
    public static final long BigInteger_avm_toString_1 = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long BigInteger_avm_toByteArray = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long BigInteger_avm_intValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_longValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_floatValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_doubleValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_longValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_intValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_shortValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_byteValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigInteger_avm_constructor_6 = 131;
    public static final long BigInteger_avm_compareTo_1 = 124;
    public static final long ABIEncoder_avm_encodeMethodArguments = 17372; // byte code cost - 402; invoked methods cost - 16970;
    public static final long ABIEncoder_avm_encodeOneObject = 55511; // byte code cost - 276; invoked methods cost - 55235;
    public static final long Number_avm_byteValue = 118;
    public static final long Number_avm_shortValue = 118;
    public static final long LongBuffer_avm_allocate = 935; // byte code cost - 432; invoked methods cost - 503;
    public static final long LongBuffer_avm_wrap = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long LongBuffer_avm_wrap_1 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long LongBuffer_avm_slice = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long LongBuffer_avm_duplicate = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long LongBuffer_avm_asReadOnlyBuffer = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long LongBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long LongBuffer_avm_get_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long LongBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long LongBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long LongBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long LongBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long LongBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long LongBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long LongBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long LongBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long LongBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long LongBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long LongBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long LongBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long LongBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long LongBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long LongBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long LongBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long LongBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long LongBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long LongBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long LongBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long LongBuffer_avm_duplicate_1 = 116;
    public static final long LongBuffer_avm_slice_1 = 116;
    public static final long LongBuffer_avm_array_1 = 116;
    public static final long LongBuffer_avm_rewind_1 = 116;
    public static final long LongBuffer_avm_flip_1 = 116;
    public static final long LongBuffer_avm_clear_1 = 116;
    public static final long LongBuffer_avm_reset_1 = 116;
    public static final long LongBuffer_avm_mark_1 = 116;
    public static final long LongBuffer_avm_limit_1 = 122;
    public static final long LongBuffer_avm_position_1 = 122;
    public static final long LongBuffer_avm_compareTo_1 = 124;
    public static final long ShortArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long ShortArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long Result_avm_constructor = 146;
    public static final long Result_avm_isSuccess = 62;
    public static final long Result_avm_getReturnData = 190; // byte code cost - 62; invoked methods cost - 128;
    public static final long Integer_avm_toString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long Integer_avm_toUnsignedString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long Integer_avm_toHexString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Integer_avm_toOctalString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Integer_avm_toBinaryString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Integer_avm_toString_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Integer_avm_toUnsignedString_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Integer_avm_parseInt = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Integer_avm_parseInt_1 = 324; // byte code cost - 176; invoked methods cost - 148;
    public static final long Integer_avm_parseInt_2 = 402; // byte code cost - 254; invoked methods cost - 148;
    public static final long Integer_avm_parseUnsignedInt = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Integer_avm_parseUnsignedInt_1 = 324; // byte code cost - 176; invoked methods cost - 148;
    public static final long Integer_avm_parseUnsignedInt_2 = 402; // byte code cost - 254; invoked methods cost - 148;
    public static final long Integer_avm_valueOf = 182;
    public static final long Integer_avm_valueOf_1 = 182;
    public static final long Integer_avm_valueOf_2 = 288;
    public static final long Integer_avm_constructor = 131;
    public static final long Integer_avm_constructor_1 = 197;
    public static final long Integer_avm_byteValue = 64;
    public static final long Integer_avm_shortValue = 64;
    public static final long Integer_avm_intValue = 62;
    public static final long Integer_avm_longValue = 64;
    public static final long Integer_avm_floatValue = 64;
    public static final long Integer_avm_doubleValue = 64;
    public static final long Integer_avm_toString_2 = 122;
    public static final long Integer_avm_hashCode = 122;
    public static final long Integer_avm_hashCode_1 = 56;
    public static final long Integer_avm_equals = 333; //maximum cost of multiple blocks;
    public static final long Integer_avm_decode = 636; // byte code cost - 468; invoked methods cost - 168;
    public static final long Integer_avm_compareTo = 134;
    public static final long Integer_avm_compare = 262; //maximum cost of multiple blocks;
    public static final long Integer_avm_compareUnsigned = 140;
    public static final long Integer_avm_toUnsignedLong = 67;
    public static final long Integer_avm_divideUnsigned = 189;
    public static final long Integer_avm_remainderUnsigned = 189;
    public static final long Integer_avm_highestOneBit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_lowestOneBit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_numberOfLeadingZeros = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_numberOfTrailingZeros = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_bitCount = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_reverse = 138; // byte code cost - 118; invoked methods cost - 20;
    public static final long Integer_avm_signum = 86;
    public static final long Integer_avm_reverseBytes = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Integer_avm_sum = 65;
    public static final long Integer_avm_max = 122;
    public static final long Integer_avm_min = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Integer_avm_compareTo_1 = 124;
    public static final long ByteOrder_avm_toString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long ByteOrder_avm_constructor = 131;
    public static final long LambdaMetafactory_avm_metafactory = 166; // byte code cost - 146; invoked methods cost - 20;
    public static final long ABIDecoder_avm_decodeAndRunWithClass = 37234; //maximum cost of multiple blocks; // byte code cost - 520; invoked methods cost - 36714;
    public static final long ABIDecoder_avm_decodeAndRunWithObject = 37112; //maximum cost of multiple blocks; // byte code cost - 460; invoked methods cost - 36652;
    public static final long ABIDecoder_avm_decodeMethodName = 1161; // byte code cost - 336; invoked methods cost - 825;
    public static final long ABIDecoder_avm_decodeArguments = 2600; //maximum cost of multiple blocks; // byte code cost - 448; invoked methods cost - 2152;
    public static final long ABIDecoder_avm_decodeOneObject = 223678; // byte code cost - 335; invoked methods cost - 223343;
    public static final long ByteArray_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long ByteArray_avm_constructor = 176;
    public static final long ByteArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long Double_avm_constructor = 131;
    public static final long Double_avm_toHexString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Double_avm_toString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Double_avm_valueOf = 492;
    public static final long Double_avm_valueOf_1 = 432;
    public static final long Double_avm_parseDouble = 324; // byte code cost - 176; invoked methods cost - 148;
    public static final long Double_avm_isNaN = 161; //maximum cost of multiple blocks;
    public static final long Double_avm_isInfinite = 218; //maximum cost of multiple blocks;
    public static final long Double_avm_isFinite = 221; //maximum cost of multiple blocks;
    public static final long Double_avm_isNaN_1 = 122;
    public static final long Double_avm_isInfinite_1 = 122;
    public static final long Double_avm_toString_1 = 122;
    public static final long Double_avm_byteValue = 66;
    public static final long Double_avm_shortValue = 66;
    public static final long Double_avm_intValue = 64;
    public static final long Double_avm_longValue = 64;
    public static final long Double_avm_floatValue = 64;
    public static final long Double_avm_doubleValue = 62;
    public static final long Double_avm_hashCode = 122;
    public static final long Double_avm_hashCode_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Double_avm_doubleToLongBits = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Double_avm_doubleToRawLongBits = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Double_avm_longBitsToDouble = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Double_avm_compareTo = 134;
    public static final long Double_avm_compare = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Double_avm_sum = 65;
    public static final long Double_avm_max = 122;
    public static final long Double_avm_min = 122;
    public static final long Double_avm_compareTo_1 = 124;
    public static final long FloatArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long FloatArray_avm_constructor = 176;
    public static final long FloatArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long ShortBuffer_avm_allocate = 935; // byte code cost - 432; invoked methods cost - 503;
    public static final long ShortBuffer_avm_wrap = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long ShortBuffer_avm_wrap_1 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long ShortBuffer_avm_slice = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long ShortBuffer_avm_duplicate = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long ShortBuffer_avm_asReadOnlyBuffer = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long ShortBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ShortBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ShortBuffer_avm_get_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ShortBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ShortBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long ShortBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long ShortBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long ShortBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long ShortBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long ShortBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ShortBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long ShortBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ShortBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ShortBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ShortBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long ShortBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ShortBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ShortBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ShortBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ShortBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ShortBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ShortBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ShortBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long ShortBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long ShortBuffer_avm_toString = 304; // byte code cost - 284; invoked methods cost - 20;
    public static final long ShortBuffer_avm_order = 549; // byte code cost - 184; invoked methods cost - 365;
    public static final long ShortBuffer_avm_isReadOnly = 144; // byte code cost - 124; invoked methods cost - 20;
    public static final long ShortBuffer_avm_duplicate_1 = 116;
    public static final long ShortBuffer_avm_slice_1 = 116;
    public static final long ShortBuffer_avm_array_1 = 116;
    public static final long ShortBuffer_avm_rewind_1 = 116;
    public static final long ShortBuffer_avm_flip_1 = 116;
    public static final long ShortBuffer_avm_clear_1 = 116;
    public static final long ShortBuffer_avm_reset_1 = 116;
    public static final long ShortBuffer_avm_mark_1 = 116;
    public static final long ShortBuffer_avm_limit_1 = 122;
    public static final long ShortBuffer_avm_position_1 = 122;
    public static final long ShortBuffer_avm_compareTo_1 = 124;
    public static final long CharBuffer_avm_allocate = 941; // byte code cost - 438; invoked methods cost - 503;
    public static final long CharBuffer_avm_wrap = 529; // byte code cost - 381; invoked methods cost - 148;
    public static final long CharBuffer_avm_wrap_1 = 517; // byte code cost - 369; invoked methods cost - 148;
    public static final long CharBuffer_avm_read = 158; // byte code cost - 138; invoked methods cost - 20;
    public static final long CharBuffer_avm_wrap_2 = 589; // byte code cost - 441; invoked methods cost - 148;
    public static final long CharBuffer_avm_wrap_3 = 577; // byte code cost - 429; invoked methods cost - 148;
    public static final long CharBuffer_avm_slice = 418; // byte code cost - 398; invoked methods cost - 20;
    public static final long CharBuffer_avm_duplicate = 418; // byte code cost - 398; invoked methods cost - 20;
    public static final long CharBuffer_avm_asReadOnlyBuffer = 418; // byte code cost - 398; invoked methods cost - 20;
    public static final long CharBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long CharBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long CharBuffer_avm_get_1 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long CharBuffer_avm_get_2 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long CharBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long CharBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long CharBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long CharBuffer_avm_put_5 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long CharBuffer_avm_put_6 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long CharBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long CharBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long CharBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long CharBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long CharBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long CharBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long CharBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long CharBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long CharBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long CharBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long CharBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long CharBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long CharBuffer_avm_length = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_charAt = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long CharBuffer_avm_subSequence = 430; // byte code cost - 410; invoked methods cost - 20;
    public static final long CharBuffer_avm_append = 479; // byte code cost - 331; invoked methods cost - 148;
    public static final long CharBuffer_avm_append_1 = 491; // byte code cost - 343; invoked methods cost - 148;
    public static final long CharBuffer_avm_append_2 = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long CharBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long CharBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long CharBuffer_avm_duplicate_1 = 116;
    public static final long CharBuffer_avm_slice_1 = 116;
    public static final long CharBuffer_avm_array_1 = 116;
    public static final long CharBuffer_avm_rewind_1 = 116;
    public static final long CharBuffer_avm_flip_1 = 116;
    public static final long CharBuffer_avm_clear_1 = 116;
    public static final long CharBuffer_avm_reset_1 = 116;
    public static final long CharBuffer_avm_mark_1 = 116;
    public static final long CharBuffer_avm_limit_1 = 122;
    public static final long CharBuffer_avm_position_1 = 122;
    public static final long CharBuffer_avm_compareTo_1 = 124;
    public static final long CharBuffer_avm_append_3 = 122;
    public static final long CharBuffer_avm_append_4 = 134;
    public static final long CharBuffer_avm_append_5 = 122;
    public static final long CharBuffer_avm_subSequence_1 = 128;
    public static final long DoubleArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long DoubleArray_avm_constructor = 176;
    public static final long DoubleArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long Address_avm_constructor = 607; //maximum cost of multiple blocks; // byte code cost - 457; invoked methods cost - 150;
    public static final long Address_avm_unwrap = 62;
    public static final long Address_avm_hashCode = 447; //maximum cost of multiple blocks; // byte code cost - 319; invoked methods cost - 128;
    public static final long Address_avm_equals = 1606; //maximum cost of multiple blocks; // byte code cost - 1090; invoked methods cost - 516;
    public static final long Address_avm_toString = 1116; // byte code cost - 182; invoked methods cost - 934;
    public static final long DoubleArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long DoubleArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long FloatArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long FloatArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long Float_avm_constructor = 131;
    public static final long Float_avm_toString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Float_avm_toHexString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Float_avm_valueOf = 420;
    public static final long Float_avm_valueOf_1 = 360;
    public static final long Float_avm_parseFloat = 324; // byte code cost - 176; invoked methods cost - 148;
    public static final long Float_avm_isNaN = 161; //maximum cost of multiple blocks;
    public static final long Float_avm_isInfinite = 218; //maximum cost of multiple blocks;
    public static final long Float_avm_isFinite = 221; //maximum cost of multiple blocks;
    public static final long Float_avm_isNaN_1 = 122;
    public static final long Float_avm_isInfinite_1 = 122;
    public static final long Float_avm_toString_1 = 122;
    public static final long Float_avm_byteValue = 66;
    public static final long Float_avm_shortValue = 66;
    public static final long Float_avm_intValue = 64;
    public static final long Float_avm_longValue = 64;
    public static final long Float_avm_floatValue = 62;
    public static final long Float_avm_doubleValue = 64;
    public static final long Float_avm_hashCode = 122;
    public static final long Float_avm_hashCode_1 = 116;
    public static final long Float_avm_equals = 343; //maximum cost of multiple blocks;
    public static final long Float_avm_floatToIntBits = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Float_avm_floatToRawIntBits = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Float_avm_intBitsToFloat = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Float_avm_compareTo = 134;
    public static final long Float_avm_compare = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Float_avm_sum = 65;
    public static final long Float_avm_max = 122;
    public static final long Float_avm_min = 122;
    public static final long Float_avm_compareTo_1 = 124;
    public static final long BigDecimal_avm_constructor = 583; // byte code cost - 435; invoked methods cost - 148;
    public static final long BigDecimal_avm_constructor_1 = 711; // byte code cost - 501; invoked methods cost - 210;
    public static final long BigDecimal_avm_constructor_2 = 571; // byte code cost - 423; invoked methods cost - 148;
    public static final long BigDecimal_avm_constructor_3 = 699; // byte code cost - 489; invoked methods cost - 210;
    public static final long BigDecimal_avm_constructor_4 = 571; // byte code cost - 423; invoked methods cost - 148;
    public static final long BigDecimal_avm_constructor_5 = 699; // byte code cost - 489; invoked methods cost - 210;
    public static final long BigDecimal_avm_constructor_6 = 383; // byte code cost - 363; invoked methods cost - 20;
    public static final long BigDecimal_avm_constructor_7 = 511; // byte code cost - 429; invoked methods cost - 82;
    public static final long BigDecimal_avm_constructor_8 = 505; // byte code cost - 423; invoked methods cost - 82;
    public static final long BigDecimal_avm_constructor_9 = 633; // byte code cost - 489; invoked methods cost - 144;
    public static final long BigDecimal_avm_constructor_10 = 511; // byte code cost - 429; invoked methods cost - 82;
    public static final long BigDecimal_avm_constructor_11 = 639; // byte code cost - 495; invoked methods cost - 144;
    public static final long BigDecimal_avm_constructor_12 = 383; // byte code cost - 363; invoked methods cost - 20;
    public static final long BigDecimal_avm_constructor_13 = 511; // byte code cost - 429; invoked methods cost - 82;
    public static final long BigDecimal_avm_constructor_14 = 383; // byte code cost - 363; invoked methods cost - 20;
    public static final long BigDecimal_avm_constructor_15 = 511; // byte code cost - 429; invoked methods cost - 82;
    public static final long BigDecimal_avm_valueOf = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_valueOf_1 = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long BigDecimal_avm_valueOf_2 = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long BigDecimal_avm_add = 468; // byte code cost - 366; invoked methods cost - 102;
    public static final long BigDecimal_avm_subtract = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_subtract_1 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_multiply = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_multiply_1 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_divide = 520; // byte code cost - 438; invoked methods cost - 82;
    public static final long BigDecimal_avm_divide_1 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_divide_2 = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_divide_3 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_divideToIntegralValue = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_divideToIntegralValue_1 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_remainder = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_remainder_1 = 514; // byte code cost - 432; invoked methods cost - 82;
    public static final long BigDecimal_avm_sqrt = 502; // byte code cost - 420; invoked methods cost - 82;
    public static final long BigDecimal_avm_pow = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long BigDecimal_avm_pow_1 = 508; // byte code cost - 426; invoked methods cost - 82;
    public static final long BigDecimal_avm_abs = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_abs_1 = 502; // byte code cost - 420; invoked methods cost - 82;
    public static final long BigDecimal_avm_negate = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_negate_1 = 502; // byte code cost - 420; invoked methods cost - 82;
    public static final long BigDecimal_avm_plus = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_plus_1 = 502; // byte code cost - 420; invoked methods cost - 82;
    public static final long BigDecimal_avm_signum = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_scale = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_precision = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_unscaledValue = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigDecimal_avm_round = 502; // byte code cost - 420; invoked methods cost - 82;
    public static final long BigDecimal_avm_setScale = 508; // byte code cost - 426; invoked methods cost - 82;
    public static final long BigDecimal_avm_setScale_1 = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long BigDecimal_avm_movePointLeft = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long BigDecimal_avm_movePointRight = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long BigDecimal_avm_scaleByPowerOfTen = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long BigDecimal_avm_stripTrailingZeros = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_compareTo = 174; // byte code cost - 134; invoked methods cost - 40;
    public static final long BigDecimal_avm_min = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_max = 386; // byte code cost - 366; invoked methods cost - 20;
    public static final long BigDecimal_avm_hashCode = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_toString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long BigDecimal_avm_toEngineeringString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long BigDecimal_avm_toPlainString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long BigDecimal_avm_toBigInteger = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigDecimal_avm_toBigIntegerExact = 398; // byte code cost - 378; invoked methods cost - 20;
    public static final long BigDecimal_avm_longValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_longValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_intValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_intValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_shortValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_byteValueExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_floatValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_doubleValue = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long BigDecimal_avm_ulp = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long BigDecimal_avm_constructor_16 = 131;
    public static final long BigDecimal_avm_compareTo_1 = 124;
    public static final long ObjectArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long ObjectArray_avm_constructor = 176;
    public static final long ObjectArray_avm_constructor_1 = 300; //maximum cost of multiple blocks;
    public static final long FloatBuffer_avm_allocate = 935; // byte code cost - 432; invoked methods cost - 503;
    public static final long FloatBuffer_avm_wrap = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long FloatBuffer_avm_wrap_1 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long FloatBuffer_avm_slice = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long FloatBuffer_avm_duplicate = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long FloatBuffer_avm_asReadOnlyBuffer = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long FloatBuffer_avm_get = 212; // byte code cost - 192; invoked methods cost - 20;
    public static final long FloatBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long FloatBuffer_avm_get_1 = 218; // byte code cost - 198; invoked methods cost - 20;
    public static final long FloatBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long FloatBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long FloatBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long FloatBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long FloatBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long FloatBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long FloatBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long FloatBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long FloatBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long FloatBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long FloatBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long FloatBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long FloatBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long FloatBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long FloatBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long FloatBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long FloatBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long FloatBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long FloatBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long FloatBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long FloatBuffer_avm_compareTo = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long FloatBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long FloatBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long FloatBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long FloatBuffer_avm_duplicate_1 = 116;
    public static final long FloatBuffer_avm_slice_1 = 116;
    public static final long FloatBuffer_avm_array_1 = 116;
    public static final long FloatBuffer_avm_rewind_1 = 116;
    public static final long FloatBuffer_avm_flip_1 = 116;
    public static final long FloatBuffer_avm_clear_1 = 116;
    public static final long FloatBuffer_avm_reset_1 = 116;
    public static final long FloatBuffer_avm_mark_1 = 116;
    public static final long FloatBuffer_avm_limit_1 = 122;
    public static final long FloatBuffer_avm_position_1 = 122;
    public static final long FloatBuffer_avm_compareTo_1 = 124;
    public static final long IntArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long IntArray_avm_constructor = 176;
    public static final long IntArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long LongArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long LongArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long String_avm_constructor = 317; // byte code cost - 297; invoked methods cost - 20;
    public static final long String_avm_constructor_1 = 499; // byte code cost - 351; invoked methods cost - 148;
    public static final long String_avm_constructor_2 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long String_avm_constructor_3 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long String_avm_constructor_4 = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long String_avm_constructor_5 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long String_avm_constructor_6 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long String_avm_constructor_7 = 499; // byte code cost - 351; invoked methods cost - 148;
    public static final long String_avm_constructor_8 = 433; // byte code cost - 351; invoked methods cost - 82;
    public static final long String_avm_constructor_9 = 433; // byte code cost - 351; invoked methods cost - 82;
    public static final long String_avm_length = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long String_avm_isEmpty = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long String_avm_charAt = 214; // byte code cost - 194; invoked methods cost - 20;
    public static final long String_avm_codePointAt = 214; // byte code cost - 194; invoked methods cost - 20;
    public static final long String_avm_codePointBefore = 214; // byte code cost - 194; invoked methods cost - 20;
    public static final long String_avm_codePointCount = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_offsetByCodePoints = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_getChars = 420; // byte code cost - 272; invoked methods cost - 148;
    public static final long String_avm_getBytes = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long String_avm_getBytes_1 = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long String_avm_equals = 403; //maximum cost of multiple blocks; // byte code cost - 383; invoked methods cost - 20;
    public static final long String_avm_contentEquals = 336; // byte code cost - 254; invoked methods cost - 82;
    public static final long String_avm_contentEquals_1 = 462; // byte code cost - 314; invoked methods cost - 148;
    public static final long String_avm_equalsIgnoreCase = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_compareTo = 402; // byte code cost - 254; invoked methods cost - 148;
    public static final long String_avm_compareToIgnoreCase = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_regionMatches = 238; // byte code cost - 218; invoked methods cost - 20;
    public static final long String_avm_regionMatches_1 = 244; // byte code cost - 224; invoked methods cost - 20;
    public static final long String_avm_startsWith = 226; // byte code cost - 206; invoked methods cost - 20;
    public static final long String_avm_startsWith_1 = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_endsWith = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_hashCode = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long String_avm_indexOf = 214; // byte code cost - 194; invoked methods cost - 20;
    public static final long String_avm_indexOf_1 = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_lastIndexOf = 214; // byte code cost - 194; invoked methods cost - 20;
    public static final long String_avm_lastIndexOf_1 = 220; // byte code cost - 200; invoked methods cost - 20;
    public static final long String_avm_indexOf_2 = 286; // byte code cost - 266; invoked methods cost - 20;
    public static final long String_avm_lastIndexOf_2 = 286; // byte code cost - 266; invoked methods cost - 20;
    public static final long String_avm_lastIndexOf_3 = 292; // byte code cost - 272; invoked methods cost - 20;
    public static final long String_avm_substring = 374; // byte code cost - 354; invoked methods cost - 20;
    public static final long String_avm_substring_1 = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long String_avm_subSequence = 194;
    public static final long String_avm_concat = 446; // byte code cost - 426; invoked methods cost - 20;
    public static final long String_avm_replace = 380; // byte code cost - 360; invoked methods cost - 20;
    public static final long String_avm_matches = 286; // byte code cost - 266; invoked methods cost - 20;
    public static final long String_avm_contains = 412; //maximum cost of multiple blocks;
    public static final long String_avm_replaceFirst = 524; // byte code cost - 504; invoked methods cost - 20;
    public static final long String_avm_replaceAll = 524; // byte code cost - 504; invoked methods cost - 20;
    public static final long String_avm_replace_1 = 1012; // byte code cost - 736; invoked methods cost - 276;
    public static final long String_avm_toLowerCase = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long String_avm_toUpperCase = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long String_avm_trim = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long String_avm_toString = 56;
    public static final long String_avm_toCharArray = 368; // byte code cost - 348; invoked methods cost - 20;
    public static final long String_avm_valueOf = 362; // byte code cost - 342; invoked methods cost - 20;
    public static final long String_avm_valueOf_1 = 550; // byte code cost - 402; invoked methods cost - 148;
    public static final long String_avm_valueOf_2 = 562; // byte code cost - 414; invoked methods cost - 148;
    public static final long String_avm_copyValueOf = 562; // byte code cost - 414; invoked methods cost - 148;
    public static final long String_avm_copyValueOf_1 = 550; // byte code cost - 402; invoked methods cost - 148;
    public static final long String_avm_valueOf_3 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_valueOf_4 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_valueOf_5 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_valueOf_6 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_valueOf_7 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_valueOf_8 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long String_avm_constructor_10 = 171; // byte code cost - 131; invoked methods cost - 40;
    public static final long String_avm_compareTo_1 = 124;
    public static final long IntArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long IntArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long DoubleBuffer_avm_allocate = 935; // byte code cost - 432; invoked methods cost - 503;
    public static final long DoubleBuffer_avm_wrap = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_wrap_1 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_slice = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_duplicate = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_asReadOnlyBuffer = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_get_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long DoubleBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long DoubleBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long DoubleBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long DoubleBuffer_avm_duplicate_1 = 116;
    public static final long DoubleBuffer_avm_slice_1 = 116;
    public static final long DoubleBuffer_avm_array_1 = 116;
    public static final long DoubleBuffer_avm_rewind_1 = 116;
    public static final long DoubleBuffer_avm_flip_1 = 116;
    public static final long DoubleBuffer_avm_clear_1 = 116;
    public static final long DoubleBuffer_avm_reset_1 = 116;
    public static final long DoubleBuffer_avm_mark_1 = 116;
    public static final long DoubleBuffer_avm_limit_1 = 122;
    public static final long DoubleBuffer_avm_position_1 = 122;
    public static final long DoubleBuffer_avm_compareTo_1 = 124;
    public static final long ByteArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long ByteArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long BlockchainRuntime_avm_getAddress = 116;
    public static final long BlockchainRuntime_avm_getCaller = 116;
    public static final long BlockchainRuntime_avm_getOrigin = 116;
    public static final long BlockchainRuntime_avm_getEnergyLimit = 116;
    public static final long BlockchainRuntime_avm_getEnergyPrice = 116;
    public static final long BlockchainRuntime_avm_getValue = 116;
    public static final long BlockchainRuntime_avm_getData = 116;
    public static final long BlockchainRuntime_avm_getBlockTimestamp = 116;
    public static final long BlockchainRuntime_avm_getBlockNumber = 116;
    public static final long BlockchainRuntime_avm_getBlockEnergyLimit = 116;
    public static final long BlockchainRuntime_avm_getBlockCoinbase = 116;
    public static final long BlockchainRuntime_avm_getBlockPreviousHash = 116;
    public static final long BlockchainRuntime_avm_getBlockDifficulty = 116;
    public static final long BlockchainRuntime_avm_getStorage = 122;
    public static final long BlockchainRuntime_avm_putStorage = 128;
    public static final long BlockchainRuntime_avm_getBalance = 122;
    public static final long BlockchainRuntime_avm_getCodeSize = 122;
    public static final long BlockchainRuntime_avm_getRemainingEnergy = 116;
    public static final long BlockchainRuntime_avm_call = 140;
    public static final long BlockchainRuntime_avm_create = 134;
    public static final long BlockchainRuntime_avm_selfDestruct = 122;
    public static final long BlockchainRuntime_avm_log = 122;
    public static final long BlockchainRuntime_avm_log_1 = 128;
    public static final long BlockchainRuntime_avm_log_2 = 134;
    public static final long BlockchainRuntime_avm_log_3 = 140;
    public static final long BlockchainRuntime_avm_log_4 = 146;
    public static final long BlockchainRuntime_avm_blake2b = 122;
    public static final long BlockchainRuntime_avm_revert = 116;
    public static final long BlockchainRuntime_avm_invalid = 116;
    public static final long BlockchainRuntime_avm_print = 122;
    public static final long BlockchainRuntime_avm_println = 696; // byte code cost - 122; invoked methods cost - 574;
    public static final long StringConcatFactory_avm_makeConcatWithConstants = 939; // byte code cost - 799; invoked methods cost - 140;
    public static final long ShortArray_avm_clone = 382; // byte code cost - 362; invoked methods cost - 20;
    public static final long ShortArray_avm_constructor = 176;
    public static final long ShortArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long Object_avm_getClass = 264; // byte code cost - 244; invoked methods cost - 20;
    public static final long Object_avm_hashCode = 128;
    public static final long Object_avm_equals = 159; //maximum cost of multiple blocks;
    public static final long Object_avm_clone = 183; // byte code cost - 163; invoked methods cost - 20;
    public static final long Object_avm_toString = 56;
    public static final long Object_avm_notify = 50;
    public static final long Object_avm_notifyAll = 50;
    public static final long Object_avm_wait = 50;
    public static final long Object_avm_wait_1 = 50;
    public static final long Object_avm_wait_2 = 50;
    public static final long Object_avm_finalize = 50;
    public static final long MathContext_avm_constructor = 407; // byte code cost - 387; invoked methods cost - 20;
    public static final long MathContext_avm_constructor_1 = 535; // byte code cost - 453; invoked methods cost - 82;
    public static final long MathContext_avm_constructor_2 = 595; // byte code cost - 447; invoked methods cost - 148;
    public static final long MathContext_avm_getPrecision = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long MathContext_avm_getRoundingMode = 442; // byte code cost - 402; invoked methods cost - 40;
    public static final long MathContext_avm_equals = 271; //maximum cost of multiple blocks; // byte code cost - 251; invoked methods cost - 20;
    public static final long MathContext_avm_hashCode = 733; // byte code cost - 557; invoked methods cost - 176;
    public static final long MathContext_avm_toString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long RoundingMode_avm_values = 118;
    public static final long RoundingMode_avm_valueOf = 284;
    public static final long RoundingMode_avm_valueOf_1 = 576; //maximum cost of multiple blocks; // byte code cost - 396; invoked methods cost - 180;
    public static final long Boolean_avm_constructor = 131;
    public static final long Boolean_avm_parseBoolean = 468; //maximum cost of multiple blocks; // byte code cost - 320; invoked methods cost - 148;
    public static final long Boolean_avm_booleanValue = 62;
    public static final long Boolean_avm_valueOf = 152; //maximum cost of multiple blocks;
    public static final long Boolean_avm_valueOf_1 = 212; //maximum cost of multiple blocks;
    public static final long Boolean_avm_toString = 472; //maximum cost of multiple blocks;
    public static final long Boolean_avm_toString_1 = 478; //maximum cost of multiple blocks;
    public static final long Boolean_avm_hashCode = 122;
    public static final long Boolean_avm_hashCode_1 = 152; //maximum cost of multiple blocks;
    public static final long Boolean_avm_equals = 333; //maximum cost of multiple blocks;
    public static final long Boolean_avm_compareTo = 134;
    public static final long Boolean_avm_compare = 255; //maximum cost of multiple blocks;
    public static final long Boolean_avm_logicalAnd = 200; //maximum cost of multiple blocks;
    public static final long Boolean_avm_logicalOr = 200; //maximum cost of multiple blocks;
    public static final long Boolean_avm_logicalXor = 85; // byte code cost - 65; invoked methods cost - 20;
    public static final long Boolean_avm_compareTo_1 = 124;
    public static final long CharArray2D_avm_clone = 442; // byte code cost - 362; invoked methods cost - 80;
    public static final long CharArray2D_avm_constructor_2 = 704; //maximum cost of multiple blocks;
    public static final long Character_avm_constructor = 131;
    public static final long Character_avm_valueOf = 534;
    public static final long Character_avm_charValue = 128;
    public static final long Character_avm_hashCode = 188;
    public static final long Character_avm_hashCode_1 = 56;
    public static final long Character_avm_toString = 452;
    public static final long Character_avm_toString_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Character_avm_isValidCodePoint = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isBmpCodePoint = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isSupplementaryCodePoint = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isHighSurrogate = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLowSurrogate = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isSurrogate = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isSurrogatePair = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Character_avm_charCount = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toCodePoint = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Character_avm_codePointAt = 390; // byte code cost - 242; invoked methods cost - 148;
    public static final long Character_avm_codePointAt_1 = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Character_avm_codePointAt_2 = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long Character_avm_codePointBefore = 390; // byte code cost - 242; invoked methods cost - 148;
    public static final long Character_avm_codePointBefore_1 = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Character_avm_codePointBefore_2 = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long Character_avm_highSurrogate = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_lowSurrogate = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toChars = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long Character_avm_toChars_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Character_avm_codePointCount = 396; // byte code cost - 248; invoked methods cost - 148;
    public static final long Character_avm_codePointCount_1 = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long Character_avm_offsetByCodePoints = 396; // byte code cost - 248; invoked methods cost - 148;
    public static final long Character_avm_offsetByCodePoints_1 = 348; // byte code cost - 200; invoked methods cost - 148;
    public static final long Character_avm_isLowerCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLowerCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUpperCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUpperCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isTitleCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isTitleCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isDigit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isDigit_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isDefined = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isDefined_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLetter = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLetter_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLetterOrDigit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isLetterOrDigit_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isAlphabetic = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isIdeographic = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isJavaIdentifierStart = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isJavaIdentifierStart_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isJavaIdentifierPart = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isJavaIdentifierPart_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUnicodeIdentifierStart = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUnicodeIdentifierStart_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUnicodeIdentifierPart = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isUnicodeIdentifierPart_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isIdentifierIgnorable = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isIdentifierIgnorable_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toLowerCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toLowerCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toUpperCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toUpperCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toTitleCase = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_toTitleCase_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_digit = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Character_avm_digit_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Character_avm_getNumericValue = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_getNumericValue_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isSpaceChar = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isSpaceChar_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isWhitespace = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isWhitespace_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isISOControl = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isISOControl_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_getType = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_getType_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_forDigit = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Character_avm_getDirectionality = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_getDirectionality_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isMirrored = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_isMirrored_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_compareTo = 134;
    public static final long Character_avm_compare = 65;
    public static final long Character_avm_reverseBytes = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Character_avm_getName = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Character_avm_codePointOf = 344; // byte code cost - 176; invoked methods cost - 168;
    public static final long Class_avm_getName = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long Class_avm_toString = 56;
    public static final long Class_avm_cast = 150; // byte code cost - 130; invoked methods cost - 20;
    public static final long Class_avm_getSuperclass = 349; //maximum cost of multiple blocks; // byte code cost - 329; invoked methods cost - 20;
    public static final long Class_avm_desiredAssertionStatus = 1357; // byte code cost - 56; invoked methods cost - 1301;
    public static final long Class_avm_constructor = 151; // byte code cost - 131; invoked methods cost - 20;
    public static final long StringBuilder_avm_constructor = 311; // byte code cost - 291; invoked methods cost - 20;
    public static final long StringBuilder_avm_constructor_1 = 499; // byte code cost - 351; invoked methods cost - 148;
    public static final long StringBuilder_avm_constructor_2 = 559; // byte code cost - 411; invoked methods cost - 148;
    public static final long StringBuilder_avm_append = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_1 = 344; // byte code cost - 196; invoked methods cost - 148;
    public static final long StringBuilder_avm_append_2 = 278; // byte code cost - 196; invoked methods cost - 82;
    public static final long StringBuilder_avm_append_3 = 344; // byte code cost - 196; invoked methods cost - 148;
    public static final long StringBuilder_avm_append_4 = 356; // byte code cost - 208; invoked methods cost - 148;
    public static final long StringBuilder_avm_append_5 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_6 = 416; // byte code cost - 268; invoked methods cost - 148;
    public static final long StringBuilder_avm_append_7 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_8 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_9 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_10 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_11 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_append_12 = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_appendCodePoint = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_delete = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_deleteCharAt = 156; // byte code cost - 136; invoked methods cost - 20;
    public static final long StringBuilder_avm_replace = 363; // byte code cost - 215; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert = 362; // byte code cost - 214; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert_1 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_2 = 350; // byte code cost - 202; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert_3 = 350; // byte code cost - 202; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert_4 = 410; // byte code cost - 262; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert_5 = 482; // byte code cost - 334; invoked methods cost - 148;
    public static final long StringBuilder_avm_insert_6 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_7 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_8 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_9 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_10 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_insert_11 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuilder_avm_indexOf = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long StringBuilder_avm_indexOf_1 = 342; // byte code cost - 194; invoked methods cost - 148;
    public static final long StringBuilder_avm_lastIndexOf = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long StringBuilder_avm_lastIndexOf_1 = 342; // byte code cost - 194; invoked methods cost - 148;
    public static final long StringBuilder_avm_reverse = 150; // byte code cost - 130; invoked methods cost - 20;
    public static final long StringBuilder_avm_toString = 216;
    public static final long StringBuilder_avm_charAt = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuilder_avm_subSequence = 188;
    public static final long StringBuilder_avm_length = 176;
    public static final long StringBuilder_avm_append_13 = 122;
    public static final long StringBuilder_avm_append_14 = 134;
    public static final long StringBuilder_avm_append_15 = 122;
    public static final long ByteBuffer_avm_allocate = 923; // byte code cost - 420; invoked methods cost - 503;
    public static final long ByteBuffer_avm_wrap = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long ByteBuffer_avm_wrap_1 = 499; // byte code cost - 351; invoked methods cost - 148;
    public static final long ByteBuffer_avm_slice = 382; // byte code cost - 362; invoked methods cost - 20;
    public static final long ByteBuffer_avm_duplicate = 382; // byte code cost - 362; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asReadOnlyBuffer = 382; // byte code cost - 362; invoked methods cost - 20;
    public static final long ByteBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_get_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long ByteBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long ByteBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long ByteBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long ByteBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long ByteBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long ByteBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long ByteBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ByteBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ByteBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ByteBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ByteBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long ByteBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long ByteBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long ByteBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long ByteBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long ByteBuffer_avm_order_1 = 353; // byte code cost - 271; invoked methods cost - 82;
    public static final long ByteBuffer_avm_alignmentOffset = 222; // byte code cost - 202; invoked methods cost - 20;
    public static final long ByteBuffer_avm_alignedSlice = 388; // byte code cost - 368; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getChar = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getChar_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putChar = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putChar_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getShort = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getShort_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putShort = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putShort_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getInt = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getInt_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putInt = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putInt_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getLong = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getLong_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putLong = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putLong_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getFloat = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getFloat_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putFloat = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putFloat_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getDouble = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_getDouble_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putDouble = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long ByteBuffer_avm_putDouble_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asCharBuffer = 460; // byte code cost - 440; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asShortBuffer = 454; // byte code cost - 434; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asIntBuffer = 454; // byte code cost - 434; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asLongBuffer = 454; // byte code cost - 434; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asFloatBuffer = 454; // byte code cost - 434; invoked methods cost - 20;
    public static final long ByteBuffer_avm_asDoubleBuffer = 454; // byte code cost - 434; invoked methods cost - 20;
    public static final long ByteBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long ByteBuffer_avm_duplicate_1 = 116;
    public static final long ByteBuffer_avm_slice_1 = 116;
    public static final long ByteBuffer_avm_array_1 = 116;
    public static final long ByteBuffer_avm_rewind_1 = 116;
    public static final long ByteBuffer_avm_flip_1 = 116;
    public static final long ByteBuffer_avm_clear_1 = 116;
    public static final long ByteBuffer_avm_reset_1 = 116;
    public static final long ByteBuffer_avm_mark_1 = 116;
    public static final long ByteBuffer_avm_limit_1 = 122;
    public static final long ByteBuffer_avm_position_1 = 122;
    public static final long ByteBuffer_avm_compareTo_1 = 124;
    public static final long System_avm_arraycopy = 659; //maximum cost of multiple blocks; // byte code cost - 619; invoked methods cost - 40;
    public static final long Buffer_avm_capacity = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long Buffer_avm_position = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long Buffer_avm_position_1 = 323; // byte code cost - 283; invoked methods cost - 40;
    public static final long Buffer_avm_limit = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long Buffer_avm_limit_1 = 323; // byte code cost - 283; invoked methods cost - 40;
    public static final long Buffer_avm_mark = 317; // byte code cost - 277; invoked methods cost - 40;
    public static final long Buffer_avm_reset = 317; // byte code cost - 277; invoked methods cost - 40;
    public static final long Buffer_avm_clear = 317; // byte code cost - 277; invoked methods cost - 40;
    public static final long Buffer_avm_flip = 317; // byte code cost - 277; invoked methods cost - 40;
    public static final long Buffer_avm_rewind = 317; // byte code cost - 277; invoked methods cost - 40;
    public static final long Buffer_avm_remaining = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long Buffer_avm_hasRemaining = 208; // byte code cost - 188; invoked methods cost - 20;
    public static final long Buffer_avm_constructor = 146;
    public static final long StringBuffer_avm_constructor = 311; // byte code cost - 291; invoked methods cost - 20;
    public static final long StringBuffer_avm_constructor_1 = 499; // byte code cost - 351; invoked methods cost - 148;
    public static final long StringBuffer_avm_constructor_2 = 265;
    public static final long StringBuffer_avm_length = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StringBuffer_avm_capacity = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StringBuffer_avm_ensureCapacity = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuffer_avm_trimToSize = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StringBuffer_avm_setLength = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuffer_avm_charAt = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuffer_avm_codePointAt = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuffer_avm_codePointBefore = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long StringBuffer_avm_codePointCount = 154; // byte code cost - 134; invoked methods cost - 20;
    public static final long StringBuffer_avm_offsetByCodePoints = 154; // byte code cost - 134; invoked methods cost - 20;
    public static final long StringBuffer_avm_getChars = 166; // byte code cost - 146; invoked methods cost - 20;
    public static final long StringBuffer_avm_setCharAt = 154; // byte code cost - 134; invoked methods cost - 20;
    public static final long StringBuffer_avm_append = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_1 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_2 = 169; // byte code cost - 149; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_3 = 223; // byte code cost - 203; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_4 = 423; // byte code cost - 275; invoked methods cost - 148;
    public static final long StringBuffer_avm_append_5 = 351; // byte code cost - 203; invoked methods cost - 148;
    public static final long StringBuffer_avm_append_6 = 363; // byte code cost - 215; invoked methods cost - 148;
    public static final long StringBuffer_avm_append_7 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_8 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_9 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_appendCodePoint = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_10 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_11 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_append_12 = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_delete = 169; // byte code cost - 149; invoked methods cost - 20;
    public static final long StringBuffer_avm_deleteCharAt = 163; // byte code cost - 143; invoked methods cost - 20;
    public static final long StringBuffer_avm_replace = 363; // byte code cost - 215; invoked methods cost - 148;
    public static final long StringBuffer_avm_substring = 308; // byte code cost - 288; invoked methods cost - 20;
    public static final long StringBuffer_avm_subSequence = 394; // byte code cost - 354; invoked methods cost - 40;
    public static final long StringBuffer_avm_substring_1 = 314; // byte code cost - 294; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert = 362; // byte code cost - 214; invoked methods cost - 148;
    public static final long StringBuffer_avm_insert_1 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_2 = 350; // byte code cost - 202; invoked methods cost - 148;
    public static final long StringBuffer_avm_insert_3 = 350; // byte code cost - 202; invoked methods cost - 148;
    public static final long StringBuffer_avm_insert_4 = 222; // byte code cost - 202; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_5 = 234; // byte code cost - 214; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_6 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_7 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_8 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_9 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_10 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_insert_11 = 162; // byte code cost - 142; invoked methods cost - 20;
    public static final long StringBuffer_avm_indexOf = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long StringBuffer_avm_indexOf_1 = 342; // byte code cost - 194; invoked methods cost - 148;
    public static final long StringBuffer_avm_lastIndexOf = 336; // byte code cost - 188; invoked methods cost - 148;
    public static final long StringBuffer_avm_lastIndexOf_1 = 342; // byte code cost - 194; invoked methods cost - 148;
    public static final long StringBuffer_avm_reverse = 150; // byte code cost - 130; invoked methods cost - 20;
    public static final long StringBuffer_avm_toString = 216;
    public static final long StringBuffer_avm_append_13 = 122;
    public static final long StringBuffer_avm_append_14 = 134;
    public static final long StringBuffer_avm_append_15 = 122;
    public static final long Arrays_avm_hashCode = 428; //maximum cost of multiple blocks; // byte code cost - 280; invoked methods cost - 148;
    public static final long Arrays_avm_equals = 781; //maximum cost of multiple blocks; // byte code cost - 505; invoked methods cost - 276;
    public static final long Arrays_avm_copyOfRange = 496; // byte code cost - 348; invoked methods cost - 148;
    public static final long Arrays_avm_fill = 342; // byte code cost - 194; invoked methods cost - 148;
    public static final long IntBuffer_avm_allocate = 935; // byte code cost - 432; invoked methods cost - 503;
    public static final long IntBuffer_avm_wrap = 523; // byte code cost - 375; invoked methods cost - 148;
    public static final long IntBuffer_avm_wrap_1 = 511; // byte code cost - 363; invoked methods cost - 148;
    public static final long IntBuffer_avm_slice = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long IntBuffer_avm_duplicate = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long IntBuffer_avm_asReadOnlyBuffer = 406; // byte code cost - 386; invoked methods cost - 20;
    public static final long IntBuffer_avm_get = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_put = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long IntBuffer_avm_get_1 = 216; // byte code cost - 196; invoked methods cost - 20;
    public static final long IntBuffer_avm_put_1 = 237; // byte code cost - 217; invoked methods cost - 20;
    public static final long IntBuffer_avm_get_2 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long IntBuffer_avm_get_3 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long IntBuffer_avm_put_2 = 239; // byte code cost - 219; invoked methods cost - 20;
    public static final long IntBuffer_avm_put_3 = 431; // byte code cost - 283; invoked methods cost - 148;
    public static final long IntBuffer_avm_put_4 = 419; // byte code cost - 271; invoked methods cost - 148;
    public static final long IntBuffer_avm_hasArray = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_array = 224; // byte code cost - 204; invoked methods cost - 20;
    public static final long IntBuffer_avm_arrayOffset = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_position = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long IntBuffer_avm_limit = 231; // byte code cost - 211; invoked methods cost - 20;
    public static final long IntBuffer_avm_mark = 328; // byte code cost - 288; invoked methods cost - 40;
    public static final long IntBuffer_avm_reset = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long IntBuffer_avm_clear = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long IntBuffer_avm_flip = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long IntBuffer_avm_rewind = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long IntBuffer_avm_compact = 225; // byte code cost - 205; invoked methods cost - 20;
    public static final long IntBuffer_avm_isDirect = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_hashCode = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_equals = 516; //maximum cost of multiple blocks; // byte code cost - 496; invoked methods cost - 20;
    public static final long IntBuffer_avm_compareTo = 290; // byte code cost - 270; invoked methods cost - 20;
    public static final long IntBuffer_avm_toString = 370; // byte code cost - 350; invoked methods cost - 20;
    public static final long IntBuffer_avm_order = 615; // byte code cost - 250; invoked methods cost - 365;
    public static final long IntBuffer_avm_isReadOnly = 210; // byte code cost - 190; invoked methods cost - 20;
    public static final long IntBuffer_avm_duplicate_1 = 116;
    public static final long IntBuffer_avm_slice_1 = 116;
    public static final long IntBuffer_avm_array_1 = 116;
    public static final long IntBuffer_avm_rewind_1 = 116;
    public static final long IntBuffer_avm_flip_1 = 116;
    public static final long IntBuffer_avm_clear_1 = 116;
    public static final long IntBuffer_avm_reset_1 = 116;
    public static final long IntBuffer_avm_mark_1 = 116;
    public static final long IntBuffer_avm_limit_1 = 122;
    public static final long IntBuffer_avm_position_1 = 122;
    public static final long IntBuffer_avm_compareTo_1 = 124;
    public static final long Math_avm_IEEEremainder = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_abs = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_abs_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_abs_2 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_abs_3 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_acos = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_addExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_addExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_asin = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_atan = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_atan2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_cbrt = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_ceil = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_copySign = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_copySign_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_cos = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_cosh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_decrementExact = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_decrementExact_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_exp = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_expm1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_floor = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_floorDiv = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_floorDiv_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_floorDiv_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_floorMod = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_floorMod_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_floorMod_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_fma = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long Math_avm_fma_1 = 148; // byte code cost - 128; invoked methods cost - 20;
    public static final long Math_avm_getExponent = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_getExponent_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_hypot = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_incrementExact = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_incrementExact_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_log = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_log10 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_log1p = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_max = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_max_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_max_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_max_3 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_min = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_min_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_min_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_min_3 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_multiplyExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_multiplyExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_multiplyExact_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_multiplyFull = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_multiplyHigh = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_negateExact = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_negateExact_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_nextAfter = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_nextAfter_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_nextDown = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_nextDown_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_nextUp = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_nextUp_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_pow = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_rint = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_round = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_round_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_scalb = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_scalb_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_signum = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_signum_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_sin = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_sinh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_sqrt = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_subtractExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_subtractExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Math_avm_tan = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_tanh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_toDegrees = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_toIntExact = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_toRadians = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_ulp = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Math_avm_ulp_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_sin = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_cos = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_tan = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_asin = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_acos = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_atan = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_toRadians = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_toDegrees = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_exp = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_log = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_log10 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_sqrt = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_cbrt = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_IEEEremainder = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_ceil = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_floor = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_rint = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_atan2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_pow = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_round = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_round_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_addExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_addExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_subtractExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_subtractExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_multiplyExact = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_multiplyExact_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_multiplyExact_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_toIntExact = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_multiplyFull = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_multiplyHigh = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorDiv = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorDiv_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorDiv_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorMod = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorMod_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_floorMod_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_abs = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_abs_1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_abs_2 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_abs_3 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_max = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_max_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_max_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_max_3 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_min = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_min_1 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_min_2 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_min_3 = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_fma = 128;
    public static final long StrictMath_avm_fma_1 = 128;
    public static final long StrictMath_avm_ulp = 116;
    public static final long StrictMath_avm_ulp_1 = 116;
    public static final long StrictMath_avm_signum = 116;
    public static final long StrictMath_avm_signum_1 = 116;
    public static final long StrictMath_avm_sinh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_cosh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_tanh = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_hypot = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long StrictMath_avm_expm1 = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_log1p = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long StrictMath_avm_copySign = 278; //maximum cost of multiple blocks;
    public static final long StrictMath_avm_copySign_1 = 278; //maximum cost of multiple blocks;
    public static final long StrictMath_avm_getExponent = 116;
    public static final long StrictMath_avm_getExponent_1 = 116;
    public static final long StrictMath_avm_nextAfter = 122;
    public static final long StrictMath_avm_nextAfter_1 = 122;
    public static final long StrictMath_avm_nextUp = 116;
    public static final long StrictMath_avm_nextUp_1 = 116;
    public static final long StrictMath_avm_nextDown = 116;
    public static final long StrictMath_avm_nextDown_1 = 116;
    public static final long StrictMath_avm_scalb = 122;
    public static final long StrictMath_avm_scalb_1 = 122;
    public static final long Enum_avm_name = 128;
    public static final long Enum_avm_ordinal = 128;
    public static final long Enum_avm_constructor = 146;
    public static final long Enum_avm_toString = 128;
    public static final long Enum_avm_equals = 225; //maximum cost of multiple blocks;
    public static final long Enum_avm_hashCode = 128;
    public static final long Enum_avm_clone = 183; // byte code cost - 163; invoked methods cost - 20;
    public static final long Enum_avm_valueOf = 3276; //maximum cost of multiple blocks; // byte code cost - 753; invoked methods cost - 2523;
    public static final long Enum_avm_clone_1 = 116;
    public static final long Byte_avm_toString = 122;
    public static final long Byte_avm_valueOf = 270;
    public static final long Byte_avm_parseByte = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Byte_avm_parseByte_1 = 122;
    public static final long Byte_avm_valueOf_1 = 182;
    public static final long Byte_avm_valueOf_2 = 122;
    public static final long Byte_avm_decode = 618; // byte code cost - 450; invoked methods cost - 168;
    public static final long Byte_avm_constructor = 131;
    public static final long Byte_avm_constructor_1 = 197;
    public static final long Byte_avm_byteValue = 62;
    public static final long Byte_avm_shortValue = 64;
    public static final long Byte_avm_intValue = 62;
    public static final long Byte_avm_longValue = 64;
    public static final long Byte_avm_floatValue = 64;
    public static final long Byte_avm_doubleValue = 64;
    public static final long Byte_avm_toString_1 = 122;
    public static final long Byte_avm_hashCode = 122;
    public static final long Byte_avm_hashCode_1 = 56;
    public static final long Byte_avm_equals = 333; //maximum cost of multiple blocks;
    public static final long Byte_avm_compareTo = 134;
    public static final long Byte_avm_compare = 65;
    public static final long Byte_avm_compareUnsigned = 185;
    public static final long Byte_avm_toUnsignedInt = 65;
    public static final long Byte_avm_toUnsignedLong = 67;
    public static final long Byte_avm_compareTo_1 = 124;
    public static final long CharArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long CharArray_avm_constructor = 176;
    public static final long CharArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long LongArray_avm_clone = 402; // byte code cost - 362; invoked methods cost - 40;
    public static final long LongArray_avm_constructor = 176;
    public static final long LongArray_avm_constructor_1 = 320; //maximum cost of multiple blocks; // byte code cost - 300; invoked methods cost - 20;
    public static final long Long_avm_toString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long Long_avm_toUnsignedString = 302; // byte code cost - 282; invoked methods cost - 20;
    public static final long Long_avm_toHexString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Long_avm_toOctalString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Long_avm_toBinaryString = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Long_avm_toString_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Long_avm_toUnsignedString_1 = 296; // byte code cost - 276; invoked methods cost - 20;
    public static final long Long_avm_parseLong = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Long_avm_parseLong_1 = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Long_avm_parseLong_2 = 402; // byte code cost - 254; invoked methods cost - 148;
    public static final long Long_avm_parseUnsignedLong = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Long_avm_parseUnsignedLong_1 = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Long_avm_parseUnsignedLong_2 = 402; // byte code cost - 254; invoked methods cost - 148;
    public static final long Long_avm_valueOf = 182;
    public static final long Long_avm_valueOf_1 = 182;
    public static final long Long_avm_valueOf_2 = 312;
    public static final long Long_avm_decode = 660; // byte code cost - 492; invoked methods cost - 168;
    public static final long Long_avm_constructor = 131;
    public static final long Long_avm_constructor_1 = 197;
    public static final long Long_avm_byteValue = 66;
    public static final long Long_avm_shortValue = 66;
    public static final long Long_avm_intValue = 64;
    public static final long Long_avm_longValue = 62;
    public static final long Long_avm_floatValue = 64;
    public static final long Long_avm_doubleValue = 64;
    public static final long Long_avm_toString_2 = 122;
    public static final long Long_avm_hashCode = 122;
    public static final long Long_avm_hashCode_1 = 76;
    public static final long Long_avm_equals = 335; //maximum cost of multiple blocks;
    public static final long Long_avm_compareTo = 134;
    public static final long Long_avm_compare = 266; //maximum cost of multiple blocks;
    public static final long Long_avm_compareUnsigned = 140;
    public static final long Long_avm_divideUnsigned = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Long_avm_remainderUnsigned = 142; // byte code cost - 122; invoked methods cost - 20;
    public static final long Long_avm_highestOneBit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_lowestOneBit = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_numberOfLeadingZeros = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_numberOfTrailingZeros = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_bitCount = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_rotateLeft = 86;
    public static final long Long_avm_rotateRight = 86;
    public static final long Long_avm_reverse = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_signum = 88;
    public static final long Long_avm_reverseBytes = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Long_avm_sum = 65;
    public static final long Long_avm_max = 122;
    public static final long Long_avm_min = 122;
    public static final long Long_avm_compareTo_1 = 124;
    public static final long Short_avm_toString = 122;
    public static final long Short_avm_parseShort = 330; // byte code cost - 182; invoked methods cost - 148;
    public static final long Short_avm_parseShort_1 = 122;
    public static final long Short_avm_valueOf = 182;
    public static final long Short_avm_valueOf_1 = 122;
    public static final long Short_avm_valueOf_2 = 276;
    public static final long Short_avm_decode = 624; // byte code cost - 456; invoked methods cost - 168;
    public static final long Short_avm_constructor = 131;
    public static final long Short_avm_constructor_1 = 197;
    public static final long Short_avm_byteValue = 64;
    public static final long Short_avm_shortValue = 62;
    public static final long Short_avm_intValue = 62;
    public static final long Short_avm_longValue = 64;
    public static final long Short_avm_floatValue = 64;
    public static final long Short_avm_doubleValue = 64;
    public static final long Short_avm_toString_1 = 122;
    public static final long Short_avm_hashCode = 122;
    public static final long Short_avm_hashCode_1 = 56;
    public static final long Short_avm_equals = 333; //maximum cost of multiple blocks;
    public static final long Short_avm_compareTo = 134;
    public static final long Short_avm_compare = 65;
    public static final long Short_avm_compareUnsigned = 185;
    public static final long Short_avm_reverseBytes = 136; // byte code cost - 116; invoked methods cost - 20;
    public static final long Short_avm_toUnsignedInt = 65;
    public static final long Short_avm_toUnsignedLong = 67;
}